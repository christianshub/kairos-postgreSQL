- name: Install and run PostgreSQL in a container (bridge mode, idempotent)
  hosts: postgresql
  become: true
  vars:
    pg_user: kairos
    pg_password: kairos
    pgdata_path: /var/lib/postgresql/data/pgdata
    pgdata_volume_path: /opt/postgres
    pg_port: 15432

  tasks:
    - name: Remove old conflicting Docker APT sources if present
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - /etc/apt/sources.list.d/docker.list
        - /etc/apt/sources.list.d/docker-ce.list

    - name: Add Docker GPG key (with signed-by)
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /usr/share/keyrings/docker-archive-keyring.gpg
        mode: '0644'
      register: docker_gpg

    - name: Add Docker APT repository (idempotent with signed-by)
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
        filename: docker

    - name: Install Docker CE from Docker repo
      ansible.builtin.apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present
        update_cache: yes

    - name: Ensure pip is installed
      apt:
        name: python3-pip
        state: present
        update_cache: yes

    - name: Install Docker Python SDK for Ansible (remote host)
      pip:
        name: docker
        executable: pip3

    - name: Stop and remove old PostgreSQL container (if exists)
      community.docker.docker_container:
        name: postgres
        state: absent
        force_kill: true

    - name: Remove PostgreSQL data directory
      file:
        path: "{{ pgdata_volume_path }}"
        state: absent

    - name: Recreate PostgreSQL data directory
      file:
        path: "{{ pgdata_volume_path }}"
        state: directory
        owner: root
        group: root
        mode: "0755"

    - name: Run PostgreSQL 17 container
      community.docker.docker_container:
        name: postgres
        image: postgres:17
        restart_policy: always
        published_ports:
          - "{{ pg_port }}:5432"
        env:
          POSTGRES_USER: "{{ pg_user }}"
          POSTGRES_PASSWORD: "{{ pg_password }}"
          PGDATA: "{{ pgdata_path }}"
        volumes:
          - "{{ pgdata_volume_path }}:{{ pgdata_path }}"
        state: started
