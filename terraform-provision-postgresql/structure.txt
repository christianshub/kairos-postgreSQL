.
├── main.tf
├── outputs.tf
├── README.md
└── variables.tf

0 directories, 4 files

--- ./main.tf ---
terraform {
  required_providers {
    proxmox = {
      source  = "Telmate/proxmox"
      version = "3.0.1-rc1"
    }
  }
}

provider "proxmox" {
  pm_api_url          = var.proxmox_api_url
  pm_api_token_id     = var.proxmox_api_token_id
  pm_api_token_secret = var.proxmox_api_token_secret
  pm_tls_insecure     = true
}

resource "proxmox_vm_qemu" "postgresql" {
  count       = 1
  name        = "postgresql"
  target_node = "proxmox"
  clone       = "ubuntu-22-template"

  cores  = 2
  memory = 4000

  disks {
    virtio {
      virtio0 {
        disk {
          storage = "local-lvm"
          size    = "20"
        }
      }
    }
  }

  network {
    model  = "virtio"
    bridge = "vmbr0"
  }

  agent = 1
  onboot = true

  ipconfig0 = "ip=192.168.0.101/24,gw=192.168.0.1"
}

--- ./README.md ---
# VM provisioning

## Installation

```bash
terraform init -upgrade
terraform apply -parallelism=1 -lock=false
```

--- ./outputs.tf ---

--- ./.envrc ---
export TF_VAR_proxmox_api_url="https://192.168.0.132:8006/api2/json"
export TF_VAR_proxmox_api_token_id=`pass PROXMOX_TOKEN_ID`
export TF_VAR_proxmox_api_token_secret=`pass PROXMOX_SECRET_TOKEN`
export TF_VAR_ssh_user="user"
export TF_VAR_ssh_private_key="~/.ssh/id_ed25519"
export TF_LOG=DEBUG

--- ./variables.tf ---
variable "proxmox_api_url" {
  type = string
}

variable "proxmox_api_token_id" {
  type = string
}

variable "proxmox_api_token_secret" {
  type      = string
  sensitive = true
}

variable "ssh_user" {
  type = string
}

variable "ssh_private_key" {
  type      = string
  sensitive = true
}
